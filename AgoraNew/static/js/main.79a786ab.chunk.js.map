{"version":3,"sources":["components/MediaPlayer.tsx","Call.tsx","hooks/useAgora.tsx","index.tsx"],"names":["MediaPlayer","props","container","useRef","useEffect","current","videoTrack","play","stop","audioTrack","ref","className","style","width","height","client","AgoraRTC","createClient","codec","mode","Call","getUrlParam","param","queryString","window","location","search","paramValue","URLSearchParams","get","useState","appid","setAppid","token","setToken","channel","setChannel","undefined","localVideoTrack","setLocalVideoTrack","localAudioTrack","setLocalAudioTrack","localVideo","document","createElement","tflite","TfLite","getInstance","looper","joinState","setJoinState","remoteUsers","setRemoteUsers","loop","useCallback","delay","startTime","performance","now","process","videoWidth","videoHeight","render","dt","setTimeout","Math","max","createLocalTracks","audioConfig","videoConfig","a","createMicrophoneAudioTrack","microphoneTrack","fps","navigator","mediaDevices","getUserMedia","video","frameRate","customVideoStream","autoplay","onloadedmetadata","canvas","srcObject","canvasStream","captureStream","createCustomVideoTrack","mediaStreamTrack","getVideoTracks","cameraTrack","uid","join","publish","clearTimeout","close","getTracks","forEach","track","leave","handleUserPublished","user","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","on","off","changeBkg","bkg","blurBackground","setBackground","TRANSPARENT","image","Image","onload","src","useAgora","type","name","value","onChange","event","target","id","defaultValue","disabled","onClick","map","key","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79a786ab.chunk.js","sourcesContent":["import { ILocalVideoTrack, IRemoteVideoTrack, ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\nimport React, { useRef, useEffect } from \"react\";\n\nexport interface VideoPlayerProps {\n  videoTrack: ILocalVideoTrack | IRemoteVideoTrack | undefined;\n  audioTrack: ILocalAudioTrack | IRemoteAudioTrack | undefined;\n}\n\nconst MediaPlayer = (props: VideoPlayerProps) => {\n  const container = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!container.current) return;\n    props.videoTrack?.play(container.current);\n    return () => {\n      props.videoTrack?.stop();\n    };\n  }, [container, props.videoTrack]);\n  useEffect(() => {\n    props.audioTrack?.play();\n    return () => {\n      props.audioTrack?.stop();\n    };\n  }, [props.audioTrack]);\n  return (\n    <div ref={container}  className=\"video-player\" style={{ width: \"640px\", height: \"360px\"}}></div>\n  );\n}\n\nexport default MediaPlayer;","import React, { useState } from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport useAgora from './hooks/useAgora';\nimport MediaPlayer from './components/MediaPlayer';\nimport './Call.css';\n\nconst client = AgoraRTC.createClient({ codec: 'h264', mode: 'rtc' });\n\nfunction Call() {\n  const getUrlParam = (param:string) => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const paramValue = urlParams.get(param);\n    return paramValue ? paramValue : \"\";\n  };\n\n  const [ appid, setAppid ] = useState(getUrlParam('appid'));\n  const [ token, setToken ] = useState(getUrlParam('token'));\n  const [ channel, setChannel ] = useState(getUrlParam('channel'));\n  const {\n    localVideoTrack, leave, join, changeBkg, joinState, remoteUsers\n  } = useAgora(client);\n\n  return (\n    <div className='call'>\n      <form className='call-form'>\n        <label>\n          AppID:\n          <input type='text' name='appid' value={appid} onChange={(event) => { setAppid(event.target.value) }}/>\n        </label>\n        <label>\n          Token(Optional):\n          <input type='text' name='token' value={token} onChange={(event) => { setToken(event.target.value) }} />\n        </label>\n        <label>\n          Channel:\n          <input type='text' name='channel' value={channel} onChange={(event) => { setChannel(event.target.value) }} />\n        </label>\n        <div>\n          Background:\n          <select name=\"custom_bkg\" id=\"custom_bkg\" defaultValue='black' onChange={(event) => { changeBkg(event.target.value) }}>\n            <option value=\"black\">Black</option>\n            <option value=\"blur\">Blur</option>\n            <option value=\"./images/V-CUBE.png\">V-CUBE</option>\n            <option value=\"./images/bg_library.jpg\">Library</option>\n            <option value=\"./images/bg_office.jpg\">Office</option>\n            <option value=\"./images/bg_beach.jpeg\">Beach</option>\n            <option value=\"./images/ems_country_cover_17.jpg\">Nature</option>\n          </select>\n        </div>\n        <div className='button-group'>\n          <button id='join' type='button' className='btn btn-primary btn-sm' disabled={joinState} onClick={() => {join(appid, channel, token)}}>Join</button>\n          <button id='leave' type='button' className='btn btn-primary btn-sm' disabled={!joinState} onClick={() => {leave()}}>Leave</button>\n        </div>\n      </form>\n      <div className='player-container'>\n        <div className='local-player-wrapper'>\n          <p className='local-player-text'>{localVideoTrack && `localTrack`}{joinState && localVideoTrack ? `(${client.uid})` : ''}</p>\n          <MediaPlayer videoTrack={localVideoTrack} audioTrack={undefined}></MediaPlayer>\n        </div>\n        {remoteUsers.map(user => (<div className='remote-player-wrapper' key={user.uid}>\n            <p className='remote-player-text'>{`remoteVideo(${user.uid})`}</p>\n            <MediaPlayer videoTrack={user.videoTrack} audioTrack={user.audioTrack}></MediaPlayer>\n          </div>))}\n      </div>\n    </div>\n  );\n}\n\nexport default Call;\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport AgoraRTC, {\n  IAgoraRTCClient, IAgoraRTCRemoteUser, MicrophoneAudioTrackInitConfig, CameraVideoTrackInitConfig, IMicrophoneAudioTrack, ILocalVideoTrack, ILocalAudioTrack } from 'agora-rtc-sdk-ng';\nimport {TfLite} from 'vcube-virtual-background';\n\ninterface CanvasElement extends HTMLCanvasElement {\n  captureStream(frameRate?: number): MediaStream;\n}\n\nexport default function useAgora(client: IAgoraRTCClient | undefined)\n  :\n   {\n      localAudioTrack: ILocalAudioTrack | undefined,\n      localVideoTrack: ILocalVideoTrack | undefined,\n      joinState: boolean,\n      leave: Function,\n      join: Function,\n      changeBkg: Function,\n      remoteUsers: IAgoraRTCRemoteUser[],\n    }\n    {\n  const [localVideoTrack, setLocalVideoTrack] = useState<ILocalVideoTrack | undefined>(undefined);\n  const [localAudioTrack, setLocalAudioTrack] = useState<ILocalAudioTrack | undefined>(undefined);\n  \n  const localVideo = useRef<HTMLVideoElement>(document.createElement('video'));\n  const tflite = useRef<TfLite>(TfLite.getInstance());\n  const looper = useRef<number>();\n\n  const [joinState, setJoinState] = useState(false);\n\n  const [remoteUsers, setRemoteUsers] = useState<IAgoraRTCRemoteUser[]>([]);\n  const loop = useCallback((delay) => {\n    const startTime = performance.now();\n    tflite.current!.process(localVideo.current, false, localVideo.current.videoWidth, localVideo.current.videoHeight);\n    tflite.current!.render();\n    const dt = performance.now() - startTime;\n    looper.current = window.setTimeout(loop, Math.max(0, delay - dt), delay);\n  }, []);\n\n  async function createLocalTracks(audioConfig?: MicrophoneAudioTrackInitConfig, videoConfig?: CameraVideoTrackInitConfig)\n  : Promise<[IMicrophoneAudioTrack, ILocalVideoTrack]> {\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(audioConfig);\n    setLocalAudioTrack(microphoneTrack);\n    const fps = 15;\n    const customVideoStream = await navigator.mediaDevices.getUserMedia({\n      video : {\n        frameRate:fps,\n        width:640,\n        height:360\n      }\n    });\n    localVideo.current.autoplay = true;\n    localVideo.current.onloadedmetadata = () => {\n      tflite.current!.canvas.width = localVideo.current.videoWidth;\n      tflite.current!.canvas.height = localVideo.current.videoHeight;\n      loop(1000/fps);\n    }\n    localVideo.current.srcObject = customVideoStream;\n\n    const canvasStream = (tflite.current!.canvas as CanvasElement).captureStream();\n    const cameraTrack = await AgoraRTC.createCustomVideoTrack({mediaStreamTrack: canvasStream.getVideoTracks()[0]});\n    setLocalVideoTrack(cameraTrack);\n    return [microphoneTrack, cameraTrack];\n  }\n  \n  function changeBkg(bkg:string) {\n    tflite.current!.blurBackground = bkg === 'blur';\n    if (bkg === 'blur'){\n      return;\n    }\n\n    if (bkg === 'black') {\n      tflite.current!.setBackground(TfLite.TRANSPARENT);\n    } else {\n      tflite.current!.blurBackground = false;\n      const image = new Image();\n      image.onload = function () {\n        tflite.current!.setBackground(image);\n      };\n      image.src = bkg;\n    }\n  }\n\n  async function join(appid: string, channel: string, token?: string, uid?: string | number | null) {\n    if (!client) return;\n    const [microphoneTrack, cameraTrack] = await createLocalTracks();\n    \n    await client.join(appid, channel, token || null);\n    await client.publish([microphoneTrack, cameraTrack]);\n\n    (window as any).client = client;\n    (window as any).videoTrack = cameraTrack;\n\n    setJoinState(true);\n  }\n\n  async function leave() {\n    clearTimeout(looper.current);\n    if (localAudioTrack) {\n      localAudioTrack.stop();\n      localAudioTrack.close();\n    }\n    if (localVideoTrack) {\n      localVideoTrack.stop();\n      localVideoTrack.close();\n    }\n    if (localVideo.current) {\n      const mediaStream = localVideo.current.srcObject as MediaStream;\n      mediaStream.getTracks().forEach(function(track) {\n        track.stop();\n      });\n    }\n    setRemoteUsers([]);\n    setJoinState(false);\n    await client?.leave();\n  }\n\n  useEffect(() => {\n    if (!client) return;\n    setRemoteUsers(client.remoteUsers);\n\n    const handleUserPublished = async (user: IAgoraRTCRemoteUser, mediaType: 'audio' | 'video') => {\n      await client.subscribe(user, mediaType);\n      // toggle rerender while state of remoteUsers changed.\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\n    }\n    const handleUserUnpublished = (user: IAgoraRTCRemoteUser) => {\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\n    }\n    const handleUserJoined = (user: IAgoraRTCRemoteUser) => {\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\n    }\n    const handleUserLeft = (user: IAgoraRTCRemoteUser) => {\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\n    }\n    client.on('user-published', handleUserPublished);\n    client.on('user-unpublished', handleUserUnpublished);\n    client.on('user-joined', handleUserJoined);\n    client.on('user-left', handleUserLeft);\n\n    return () => {\n      client.off('user-published', handleUserPublished);\n      client.off('user-unpublished', handleUserUnpublished);\n      client.off('user-joined', handleUserJoined);\n      client.off('user-left', handleUserLeft);\n    };\n  }, [client]);\n\n  return {\n    localAudioTrack,\n    localVideoTrack,\n    joinState,\n    leave,\n    join,\n    changeBkg,\n    remoteUsers,\n  };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Call from './Call';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Call />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}